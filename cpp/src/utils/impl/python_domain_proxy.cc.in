#include "${CMAKE_SOURCE_DIR}/src/utils/python_domain_proxy.hh"
#include "${CMAKE_SOURCE_DIR}/src/utils/impl/python_domain_proxy_common_impl.hh"
#include "${CMAKE_SOURCE_DIR}/src/utils/impl/python_domain_proxy_call_impl.hh"
#include "${CMAKE_SOURCE_DIR}/src/utils/impl/python_domain_proxy_impl.hh"

#include <boost/preprocessor/list/for_each.hpp>
#include <boost/preprocessor/list/for_each_product.hpp>
#include <boost/preprocessor/tuple/elem.hpp>

template class skdecide::PythonDomainProxy<
    skdecide::${Texecution}, skdecide::${Tagent}, skdecide::${Tobservability},
    skdecide::${Tcontrollability}, skdecide::${Tmemory}>;

typedef skdecide::PythonDomainProxyBase<skdecide::${Texecution}> PDPB;

typedef skdecide::PythonDomainProxy<
    skdecide::${Texecution}, skdecide::${Tagent}, skdecide::${Tobservability},
    skdecide::${Tcontrollability}, skdecide::${Tmemory}>
    PDP;

#define LIST                                                                   \
  (State,                                                                      \
   (Observation,                                                               \
    (Event, (Action, (ApplicableActionSpace,                                   \
                      (Value, (Predicate, (OutcomeInfo, BOOST_PP_NIL))))))))

#define MACRO(r, data, elem)                                                   \
  template class PDP::AgentDataAccess<typename PDPB::elem, skdecide::${Tagent}>;

BOOST_PP_LIST_FOR_EACH(MACRO, , LIST)

#define D_$                                                                    \
  { Tagent }
#if defined D_MultiAgent
#define MMACRO(r, data, elem)                                                  \
  template class PDPB::PyObj<typename PDPB::elem, py::dict>;                   \
  template class PDPB::PyObj<                                                  \
      typename PDP::AgentDataAccess<typename PDPB::elem,                       \
                                    skdecide::${Tagent}>::Item,                \
      py::tuple>;                                                              \
  template class PDPB::PyObj<                                                  \
      typename PDP::AgentDataAccess<typename PDPB::elem,                       \
                                    skdecide::${Tagent}>::AgentDataAccessor,   \
      py::detail::item_accessor>;                                              \
  template class PDPB::PyIter<                                                 \
      typename PDP::AgentDataAccess<typename PDPB::elem,                       \
                                    skdecide::${Tagent}>::Item,                \
      py::detail::dict_iterator>;

BOOST_PP_LIST_FOR_EACH(MMACRO, , LIST)
template typename PDPB::ApplicableActionSpace
PDP::get_agent_applicable_actions<skdecide::MultiAgent, typename PDP::Action,
                                  typename PDPB::ApplicableActionSpace>(
    const typename PDP::Memory &, const typename PDP::Action &,
    const typename PDP::Agent &, const std::size_t *);
#endif

template class PDP::Outcome<PDP::TransitionOutcome, PDP::State>;
template class PDP::Outcome<PDP::EnvironmentOutcome, PDP::Observation>;

template class PDPB::PyIter<PDP::NextStateDistribution::DistributionValue>;
